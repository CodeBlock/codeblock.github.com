<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[CodeBlock's Blog]]></title>
  <link href="http://CodeBlock.github.io/atom.xml" rel="self"/>
  <link href="http://CodeBlock.github.io/"/>
  <updated>2013-12-28T13:30:21-05:00</updated>
  <id>http://CodeBlock.github.io/</id>
  <author>
    <name><![CDATA[Ricky Elrod]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fedora Copr and eval.so]]></title>
    <link href="http://CodeBlock.github.io/blog/2013/12/28/fedora-coprs-and-eval-dot-so/"/>
    <updated>2013-12-28T10:00:00-05:00</updated>
    <id>http://CodeBlock.github.io/blog/2013/12/28/fedora-coprs-and-eval-dot-so</id>
    <content type="html"><![CDATA[<p>One of my side projects, <a href="http://eval.so/">http://eval.so/</a> (which I will be writing more about in
the near future), depends on a lot of programming language environments. In
short, it provides a sandboxed JSON API to let people evaluate code in a lot of
languages.</p>

<p>This isn&rsquo;t any kind of official launch/announcement for the project (in fact,
it is being rewritten and the current API is going to change very soon) &ndash; I
just wanted to introduce it enough for context of the rest of this post.</p>

<p>Because of the large number of languages that eval.so tries to support, it is
true that not every compiler/interpreter we want to support is officially
packaged in our distro of choice for running the system (Fedora). For example,
eval.so supports <a href="http://rust-lang.org/">Rust</a>, but Rust isn&rsquo;t
<a href="https://bugzilla.redhat.com/show_bug.cgi?id=915043">yet</a> packaged for Fedora.
We also support some <a href="https://github.com/justinmeza/lci">sillier</a> languages
that nobody has bothered to package yet.</p>

<p>For development purposes, we have been using a
<a href="https://github.com/eval-so/yumrepo">custom repository</a> with some
<a href="https://github.com/eval-so/yumrepo/blob/master/specs/build.sh">hacky scripts</a>
for maintaining the packages within. This has worked well, but has ended up
becoming something of a time-sink as the scripts need to be updated for each
new Fedora release, and all the packages have to be rebuilt (usually on my
laptop). Essentially we were using a few hacky bash scripts as a build system
before uploading the RPMs and repo data up to S3.</p>

<p>I knew this was the wrong approach, but it worked, and it seemed easier than
setting up a huge build system like <a href="http://koji.fedoraproject.org">Koji</a> for
our custom packages. But it came to my attention that there exists another
solution that didn&rsquo;t involve setting up Koji or using hacky shell scripts.</p>

<p>Enter <a href="http://copr.fedoraproject.org/">Copr</a>.</p>

<p>Copr is a Fedora-hosted system that is similar to ArchLinux&rsquo;s AUR or Ubuntu&rsquo;s
PPA system in that it allows people to create unofficial repositories
containing unofficial packages, so long as those packages are legal and
acceptable by the
<a href="https://fedorahosted.org/copr/wiki/UserDocs#WhatIcanbuildinCopr">guidelines</a>.</p>

<p>Our usecase is perfectly in-line with what the
<a href="https://fedoraproject.org/wiki/Category:Copr?rd=Category:Kopers#Usage_Cases">original idea</a>
for creating Copr was. So by using Copr we no longer need to maintain hacky
shell scripts and S3 repos. We simply make .src.rpms of our custom packages,
upload them somewhere, then tell Copr to go out and build them and add them to
our repository. It handles the rest.</p>

<p>There&rsquo;s also a really cool <a href="http://copr.fedoraproject.org/api/">API</a>, so we
could, in theory, script builds to occur as other events happen. For example,
we could relatively easily[1] have a new RPM build occur with each commit to
a repository.</p>

<p>Another cool thing about Copr is the CLI application (which uses the API I
mentioned above). You don&rsquo;t even need to leave your terminal to trigger builds.
Pierre-Yves (pingou) speaks about this CLI
<a href="http://blog.pingoured.fr/index.php?post/2013/03/04/Fedora-Infra%3A-Did-you-know-copr-cli">here</a>.</p>

<p>One last thing &ndash; It is worth noting that I plan on eventually trying to get
the packages in our
<a href="http://copr.fedoraproject.org/coprs/codeblock/evalso/">new eval.so copr</a> into
Fedora&rsquo;s official repos. But it&rsquo;s a lot easier to test things and get them live
quickly by putting them in a custom repository before having to go through the
review process required for official packages.</p>

<p>So bye-bye <a href="http://yum.eval.so/">http://yum.eval.so/</a> and hello Copr!</p>

<p>[1] This would be slightly complicated by needing something listening for a
post-receive hook from GitHub and actually triggering the build, but this
could be done very easily via Travis-CI by storing the Copr API key in a
<a href="http://about.travis-ci.org/docs/user/encryption-keys/">secret environment variable</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to not look like a fool due to haproxy]]></title>
    <link href="http://CodeBlock.github.io/blog/2013/09/01/how-to-not-look-like-a-fool-due-to-haproxy/"/>
    <updated>2013-09-01T15:23:00-04:00</updated>
    <id>http://CodeBlock.github.io/blog/2013/09/01/how-to-not-look-like-a-fool-due-to-haproxy</id>
    <content type="html"><![CDATA[<p>Today I deployed
<a href="https://github.com/CodeBlock/mw-FedoraBadges">mw-FedoraBadges</a> to production
in Fedora Infrastructure. It had been in staging for several days now, and we
wanted to get it live before the freeze.</p>

<p>As I deployed it, a few interesting things happened.</p>

<p>First off, it&rsquo;s useful to know that we use haproxy in front of our app servers.
Haproxy basically creates a round-robin of app servers for each application
that it sits in front of, and internally routes requests to random servers (or
servers based on a set of criteria).</p>

<p>Today I went to move the mw-FedoraBadges extension out of staging and into
production. When I did this, I moved all of the files that I modified from our
<code>modules-staging/mediawiki</code> directory into <code>modules/mediawiki</code> &ndash; or so I
thought.</p>

<p>It turns out that I missed one file &ndash; the module manifest, which had an
important change in it: it added the <code>mediawiki-FedoraBadges</code> package as a
required package on machines which include the <code>mediawiki</code> module. The other
files (a small CSS tweak, and a much more important one-line change to the
wiki&rsquo;s <code>LocalSettings.php</code> config file, which included the extension) all
deployed just fine. But since <code>LocalSettings.php</code> had updated and the servers
knew nothing of the package that <code>LocalSettings.php</code> was requiring, things
started to 500.</p>

<p>Luckily, when I make big changes like this, I only trigger a run of Puppet on a
very small subset of our app servers &mdash; in this case, one server. As soon as it
updated all files but didn&rsquo;t show any sign of installing a new package, I knew
what I had done.</p>

<p>I quickly checked the haproxy status page of one of our proxies (it didn&rsquo;t
matter which, since they largely share the same configuration), to make sure
that it had pulled the app server out of its internal round-robin.</p>

<p>I saw this and instantly breathed a sigh of relief:</p>

<p><img src="http://images.srv1.elrod.me/i-love-haproxy-so-much.png" title="&#34;haproxy saves the day&#34;" alt="&#34;haproxy saves the day&#34;"></p>

<p>I added the package requirement to the Puppet manifest and re-ran Puppet on
app01. A few seconds and a haproxy-status-page refresh later, all was green
again.</p>

<p>At this point, I figured that everything was fine. app01 seemed to be doing
fine and serving traffic, so I ran Puppet on the rest of the servers. Ut oh.</p>

<p>I waited a while for Puppet to run (I was using Ansible on our &ldquo;config
management&rdquo; server, lockbox01 to trigger the Puppet run on appXX). After a
while of getting impatient, I refreshed the haproxy status page again, and saw
that app01 was just fine, but all the other app servers had gone red in the
<code>fp-wiki</code> section. Oh crap.</p>

<p>I flipped back to the terminal, and saw that the Puppet runs had finally
finished. <code>mediawiki-FedoraBadges</code> 404&rsquo;d when Puppet tried to install it via
yum. What the heck?</p>

<p>I looked closer and saw that it was actually trying to install the old version
of <code>mw-FedoraBadges</code> &ndash; the one that had been in staging, which was a slightly
different version number than the one I was deploying. Yum had cached the old
version number, when it had last read the repo data of our infrastructure repo
and Puppet had failed to <code>expire-cache</code> to ensure the latest version was being
obtained.</p>

<p>I used Ansible to <code>yum clean expire-cache</code> on all app servers, re-ran Puppet on
them, and everything returned to green instantly.</p>

<p>We never hit outage, but for about 1-2 minutes our wiki was running on one app
server. Haproxy had saved me from outage not once today, but twice. In about
five minutes. I now love haproxy. :)</p>

<p>In slightly less stressful news, now you can show off your Fedora Badges on
your user page in the Fedora Wiki.</p>

<p>Simply add:</p>

<p><code>{{ #fedorabadges: your_fas_username }}</code></p>

<p>where you want them to appear, and</p>

<p><code>{{ #fedorabadgescount: your_fas_username }}</code></p>

<p>anywhere you want a count of your badges to appear.</p>

<p>You might need to add <code>?action=purge</code> to your userpage the first time, if
anything goes weird with caching. The extension leverages caching because of
the fact that it has to call out to Tahrir (which has the Badges information)
to get your list of badges. This call is potentially really slow, and caching
makes it be slow once, instead of on every page load.</p>

<p>The cache should last ~24 hours I believe, so at most, someone&rsquo;s badges, as
displayed on their user page, will be 23 hours and 59 minutes out of date.
You can always purge the cache by adding <code>?action=purge</code> to the URL of the
user page.</p>

<p>As an alternative (but hacky) way around this, I&rsquo;m thinking about having the
badge awarder purge the cache of the awardee&rsquo;s user page, when they are
awarded a badge. It can do this asynchronously and &ldquo;best effort&rdquo; with no real
downside if it fails, because it&rsquo;s pretty low priority. I have no idea if this
is something worth pursuing, but it sounds hacky.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Goodbye to a great friend]]></title>
    <link href="http://CodeBlock.github.io/blog/2013/07/09/goodbye-to-a-true-friend/"/>
    <updated>2013-07-09T23:45:00-04:00</updated>
    <id>http://CodeBlock.github.io/blog/2013/07/09/goodbye-to-a-true-friend</id>
    <content type="html"><![CDATA[<p>I first met Seth on IRC in June of 2010 when I joined the Infrastructure team.
From the very start, I admired his ability to say what he feels about something
without holding back. He was always able to tell someone how amazing or how bad
their idea was, in relation to something else. This made him very unique.
He was always very good at explaining his thought process, as well. He never
failed to have real, valid reasons for thinking so strongly about something. It
was never a blind emotion.</p>

<p>He was extremely caring. This past Fudcon, a small group of us went to get
dinner, and I was particularly quiet because I was tired. He turned to me and
asked, very genuinely, &ldquo;Are you okay? You look like something is bothering you.&rdquo;
He was always that way, and if someone needed help with something, he would
drop what he was doing to go help them.</p>

<p>He was a very productive person. Always on IRC, even in the early morning hours
with me sometimes, whenever I needed help with something I was working on, or
when servers blew up, and I had trouble determining why.</p>

<p>He was a very logical person, and all three FUDCons that I have attended were
filled with evenings of him talking about anything from software, to food, to
philosophy. And he retained the quality of having very logical reasons for what
he was saying, each and every time.</p>

<p>But most of all, he was a good friend. Someone that I knew I could talk to if I
needed help with things. Someone who could make you feel better when you were
having a bad day. Someone who genuinely cared about me and my success.</p>

<p>Seth, I only knew you for 3 very short years, but I will sincerely miss you. You
were a great friend and community member, and words alone cannot express my
feelings of loss.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[python-flask coming to EPEL 6 soon-ish]]></title>
    <link href="http://CodeBlock.github.io/blog/2012/07/11/python-flask-coming-to-epel-6/"/>
    <updated>2012-07-11T18:20:00-04:00</updated>
    <id>http://CodeBlock.github.io/blog/2012/07/11/python-flask-coming-to-epel-6</id>
    <content type="html"><![CDATA[<p>For those not aware, I recently picked up the python-flask and python-werkzeug
packages, which were going to be orphaned.</p>

<p>I&rsquo;ve spent the majority of today working on getting python-flask and its
dependencies working on EPEL 6, with Ian Weller.</p>

<p>The current plan is to get Flask 0.9 in EPEL right from the get-go.</p>

<p>There are two small patches we need to apply to the package to make using it
as painless as possible on RHEL environments. They both relate to telling
Flask to use the right Jinja2 package.</p>

<p>RHEL6-optional has Jinja 2.2.1. Flask requires 2.4 or greater. So we use the
EPEL version of Jinja2, <code>python-jinja2-26</code> which gives us Jinja 2.6. But we
need to tell Flask that it should import the 2.6 version, not the 2.2 version.</p>

<p>The other blocker is <code>python2-werkzeug</code> &mdash; the current EPEL 6 version of
werkzeug is 0.6.2. The plan there is to update that to 0.8.3, pending an
exemption of the Incompatible Upgrades Policy, at the EPEL meeting on Monday.</p>

<p>In any case, I just wanted to throw it out there that we are working on this
and we plan on having these pushed to EPEL soon. We&rsquo;re starting to develop
some custom apps with Flask, for use in the Fedora Infrastructure, so
this had to be done sooner or later.</p>

<p>Stay tuned.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Piano Song from 'How I Met Your Mother']]></title>
    <link href="http://CodeBlock.github.io/blog/2012/06/16/piano-song-from-how-i-met-your-mother/"/>
    <updated>2012-06-16T04:18:00-04:00</updated>
    <id>http://CodeBlock.github.io/blog/2012/06/16/piano-song-from-how-i-met-your-mother</id>
    <content type="html"><![CDATA[<p>So, this is very offtopic from what I normally blog about (programming stuff,
sysadmin stuff, etc). I&rsquo;ll be posting about a project I&rsquo;ve been working on
for Fedora Hosted soon.</p>

<p>But for now, here goes. I&rsquo;m just trying to do some people a favor ;).</p>

<p>I&rsquo;ve been on a bit of a How I Met Your Mother spree lately. Towards the end of
season 7, I started getting really hooked on the show. I had seen bits and
pieces of the show, but not in order until then.</p>

<p>However, season 7 recently ended and in my few bits of free time, I&rsquo;ve started
watching the show back from season 1. In fact, I may or may not have become
a bit addicted to the show.</p>

<p>In any case, there&rsquo;s a particular piece of music that is played in some
episodes that I recognized from somewhere, some video game, even, and I just
couldn&rsquo;t place it. I did a lot of Googling, and finally found a
<a href="http://www.youtube.com/watch?v=HBp-lGjGUxY">YouTube video</a> which has comments
with where the song was from. It was from the old classic: Super Mario
Brothers 2.</p>

<p><a href="http://www.youtube.com/watch?v=j9s4fuOL3FM">The main/overworld theme.</a></p>

<p>This probably isn&rsquo;t a comprehensive list, but this song at <strong>least</strong> appears
in:</p>

<ul>
<li>Season 7, Episode 3 (Ducky Tie) at 3:10</li>
<li>Season 5, Episode 19 (Zoo or False) at 9:30</li>
</ul>


<p>So there you have it. I saw a few comments throughout my Google journey, where
people were also trying to identify the song. Hopefully this will help.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elixir Language is now in Fedora 17]]></title>
    <link href="http://CodeBlock.github.io/blog/2012/06/04/elixir-language-is-now-in-fedora-17/"/>
    <updated>2012-06-04T11:24:00-04:00</updated>
    <id>http://CodeBlock.github.io/blog/2012/06/04/elixir-language-is-now-in-fedora-17</id>
    <content type="html"><![CDATA[<p>Well it&rsquo;s been a week since my
<a href="http://elixir-lang.org/">Elixir language</a> package got
<a href="https://bugzilla.redhat.com/show_bug.cgi?id=825418#c4">approved</a> and I am
happy to announce that it has been pushed to stable, and now appears in the
Fedora 17 updates repository.</p>

<p>Anyone who uses Fedora 17 or Fedora Rawhide, and wants to try out the new
programming language by José Valim (which runs on the Erlang VM), can simply:
<code>sudo yum install elixir</code></p>

<p>I might later on introduce an <code>elixir-git</code> subpackage for rawhide that tracks
Elixir&rsquo;s git repository more closely, but for now the <code>elixir</code> package tracks
the stable, currently 0.5.0 release, of Elixir.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='elixir'><span class='line'><span class="n">iex</span><span class="o">&gt;</span> <span class="no">IO</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;Happy hacking!&quot;</span>
</span><span class='line'><span class="no">Happy</span> <span class="n">hacking!</span>
</span><span class='line'><span class="ss">:ok</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fedora 17 on Raspberry Pi]]></title>
    <link href="http://CodeBlock.github.io/blog/2012/05/29/fedora-17-on-raspberry-pi/"/>
    <updated>2012-05-29T09:05:00-04:00</updated>
    <id>http://CodeBlock.github.io/blog/2012/05/29/fedora-17-on-raspberry-pi</id>
    <content type="html"><![CDATA[<p>So about two weeks ago I received my
<a href="http://www.raspberrypi.org/">Raspberry Pi</a>. Unfortunately I&rsquo;ve not had too
much time to actually play around with it. The day I got it I was leaving for
the <a href="http://hamvention.com">Dayton Hamvention</a>, so I had to get ready to go.</p>

<p>I had a few short hours that day, and did try out a few of the different
suggested distro images for the Pi. I first tried Fedora (the F14 remix),
then tried Debian, and I even tried Arch. They all worked (though I did have
problems with a large amount of packet loss among all of them, from the
ethernet port, but it seems to have worked itself out &mdash; might have been a
loose connection from the cable to the router).</p>

<p>After trying the various distros, I left for the Hamvention (taking it with me
to show off to my friends from the
<a href="http://www.w8upd.org">University of Akron Ham Radio Club</a>). But when I got
back home, it just pretty much stayed in its box. This is mostly because
I don&rsquo;t have an HDMI cable (I&rsquo;ll be ordering one next week), and so I have to
time playing with the Pi against my mom wanting to watch TV, and use the RCA
connector.</p>

<p>Well tonight I had an interesting idea. I was hanging out with
<a href="http://kg4sgp.com">KG4SGP</a> who is in from Virginia, and we were talking about
several projects, and where the Pi might fit into them.</p>

<p>When I got home from hanging out, I decided that it&rsquo;d be better to let my Pi
run just as a server that I can ssh into and play with, than just having it
sit in the box and doing nothing. I really do like the Pi, it&rsquo;s so awesome
that this little thing that can run off a USB port can run a full Linux
distro. I wanted to use it!</p>

<p>While I was at it, I decided I&rsquo;d try to get Fedora 17 on it. I grabbed the
<a href="http://scotland.proximity.on.ca/arm-nightlies/">latest F17 arm nightly</a>
(no X), flashed it to the SD card, got it booted in the Pi, set up static
networking, and got the Pi ssh-able. So now I have a Fedora 17 ARM playground.</p>

<p><img src="http://images.srv1.elrod.me/fedora-17-arm.png" title="&#34;htop&#34;" alt="&#34;htop&#34;"></p>

<p><img src="http://images.srv1.elrod.me/fedora-17-arm-playing-around.png" title="&#34;Playing around and showing off the Pi&#34;" alt="&#34;Playing around and showing off the Pi&#34;"></p>

<p>So &mdash; Yeah. This thing is cool. Time to play with the
<a href="http://elinux.org/RPi_Low-level_peripherals#GPIO_Driving_Example_.28Python.29">GPIO pins</a>
and make something cool!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Moving to Jekyll]]></title>
    <link href="http://CodeBlock.github.io/blog/2012/05/29/moving-to-jekyll/"/>
    <updated>2012-05-29T08:49:00-04:00</updated>
    <id>http://CodeBlock.github.io/blog/2012/05/29/moving-to-jekyll</id>
    <content type="html"><![CDATA[<p>Yep, I&rsquo;m moving to Jekyll. Too many negative connotations with
<a href="http://rickyelrod.tumblr.com">Tumblr</a> to make it worth it.</p>

<p>This is the first post of my new blog. \o/.</p>
]]></content>
  </entry>
  
</feed>
